[core]
class: CustomUnitMetadata
price: 0
maxHp: 10000
mass: 0
name:银行接收器
buildSpeed: 0
tags:银行接收器
canOnlyBeAttackedByUnitsWithTags:银行
radius: 0
onNewMapSpawn:mapCenter_asNeutral
#mapCenter_asNeutral:true
stayNeutral:true
showInEditor:false
showOnMinimap:false
ignoreInUnitCapCalculation: true
disableAllUnitCollisions: true
canNotBeDamaged:true
canNotBeDirectlyAttacked:false
disableDeathOnZeroHp:true
selfRegenRate:999999
isUnselectable:true
hideScorchMark: true
explodeOnDeath: false
fogOfWarSightRange:0
autoTriggerCooldownTime:15

@global gs1:王某人责任有限公司
#公司名称
#@global gs1_n:40000
@memory gs1_n:number
#总股数
@global gs1_p:400
#单价
@global gs1_pm:100
#最低单价
@global gs1_pa:10000
#最高单价
@global gs1_mp:0.45
#最大涨幅
@global gs1_me:0.35
#最大跌幅
@memory gp1:number
#当前单价
@memory gp2:number
#上次单价
@memory gg1:number
#买入数量
@memory gb1:number
#当前波动
@memory gb2:number
#上次波动
@memory jd1:number
#巨大几率
@memory wj1:number
#金融危机

#----
@memory bb:number
#巨大波动
@memory jp1:number
#波动临时单价

#---核心部分---

[hiddenAction_初始股票]
autoTriggerOnEvent:created
setUnitMemory:gs1_n=40000

[hiddenAction_总-1]
autoTriggerOnEvent:newMessage(withTag="-1")
setUnitMemory:gs1_n=memory.gs1_n-1

[hiddenAction_总-10]
autoTriggerOnEvent:newMessage(withTag="-10")
setUnitMemory:gs1_n=memory.gs1_n-10

[hiddenAction_总-100]
autoTriggerOnEvent:newMessage(withTag="-100")
setUnitMemory:gs1_n=memory.gs1_n-100

[hiddenAction_总-1000]
autoTriggerOnEvent:newMessage(withTag="-1000")
setUnitMemory:gs1_n=memory.gs1_n-1000

[hiddenAction_总-10000]
autoTriggerOnEvent:newMessage(withTag="-10000")
setUnitMemory:gs1_n=memory.gs1_n-10000

#减少总

[hiddenAction_总+1]
autoTriggerOnEvent:newMessage(withTag="+1")
setUnitMemory:gs1_n=memory.gs1_n+1

[hiddenAction_总+10]
autoTriggerOnEvent:newMessage(withTag="+10")
setUnitMemory:gs1_n=memory.gs1_n+10

[hiddenAction_总+100]
autoTriggerOnEvent:newMessage(withTag="+100")
setUnitMemory:gs1_n=memory.gs1_n+100

[hiddenAction_总+1000]
autoTriggerOnEvent:newMessage(withTag="+1000")
setUnitMemory:gs1_n=memory.gs1_n+1000

[hiddenAction_总+10000]
autoTriggerOnEvent:newMessage(withTag="+10000")
setUnitMemory:gs1_n=memory.gs1_n+10000


[hiddenAction_总限制40000]
autoTrigger:if memory.gs1_n >= 40000
setUnitMemory:gs1_n=40000

[hiddenAction_总限制0]
autoTrigger:if memory.gs1_n <= 0
setUnitMemory:gs1_n=0

#--资源--

[resource_gp1c]
hidden:true

[resource_wjjs]
hidden:false
displayName:金融危机时间

[resource_rdsj]
hidden:false
displayName:熔断时间

[resource_ssbd]
hidden:false
displayName:上升波动

[resource_xjbd]
hidden:false
displayName:下降波动

[resource_sxjg]
hidden:false
displayRoundedDown:true
displayName:刷新倒计时

[hiddenAction_计时55]
autoTrigger:if self.resource.sxjg > 0
addResources:sxjg:-0.25

#---触发机制---

[hiddenAction_初始化]
resetCustomTimer:true
autoTriggerOnEvent:created
setResourcesWithLogic:sxjg=50
setUnitMemory:gp1=${gs1_p}

[hiddenAction_计时]
autoTrigger:if self.resource.sxjg >= 0 and self.resource.sxjg < 0.3  and self.resource(type="wjjs") <= 0 and self.resource(type="rdsj") <= 0 and self.resource.ssbd < 4 and self.resource.xjbd < 4
alsoQueueAction:波动获取1
setResourcesWithLogic:sxjg=int(rnd(30,120))
setUnitMemory:gb2=memory.gb1

[hiddenAction_计时2]
autoTrigger:if self.resource.sxjg >= 0 and self.resource.sxjg < 0.3 and self.resource(type="wjjs") <= 0 and self.resource(type="rdsj") <= 0 and self.resource.ssbd >= 4
setResourcesWithLogic:sxjg=int(rnd(30,120))
alsoQueueAction:波动获取2
showMessageToAllPlayers:因为四连涨,所以此次股票大跌
setUnitMemory:gb2=memory.gb1


[hiddenAction_计时3]
autoTrigger:if self.resource.sxjg >= 0 and self.resource.sxjg < 0.3 and self.resource(type="wjjs") <= 0 and self.resource(type="rdsj") <= 0 and self.resource.xjbd >= 4
setResourcesWithLogic:sxjg=int(rnd(30,120))
alsoQueueAction:波动获取3
showMessageToAllPlayers:因为四连跌,所以此次股票大涨
setUnitMemory:gb2=memory.gb1


[hiddenAction_波动获取1]
buildSpeed:0
setUnitMemory:gb1=rnd((-1*${gs1_me}),${gs1_mp}),gp1=memory.gp1*(1+memory.gb1),jd1=rnd(0,1),wj1=rnd(0,10)
alsoQueueAction:最低单价检查1,最高单价检查1,股价播报1涨,股价播报1跌,股价播报1平,连续波动检查,金融危机检查,股票熔断机制,上升波动,下降波动
setResourcesWithLogic:gp1c=memory.gp1

[hiddenAction_波动获取2]
buildSpeed:0
setUnitMemory:gb1=rnd((-1.5*${gs1_me}),-0.2),gp1=memory.gp1*(1+memory.gb1),jd1=rnd(0,1),wj1=rnd(0,10)
alsoQueueAction:最低单价检查1,最高单价检查1,股价播报1涨,股价播报1跌,股价播报1平,连续波动检查,金融危机检查,股票熔断机制,上升波动,下降波动
setResourcesWithLogic:gp1c=memory.gp1,ssbd=0,xjbd=0

[hiddenAction_波动获取3]
buildSpeed:0
setUnitMemory:gb1=rnd(0.2,1.5*${gs1_mp}),gp1=memory.gp1*(1+memory.gb1),jd1=rnd(0,1),wj1=rnd(0,10)
alsoQueueAction:最低单价检查1,最高单价检查1,股价播报1涨,股价播报1跌,股价播报1平,连续波动检查,金融危机检查,股票熔断机制,5连波动取消,上升波动,下降波动
setResourcesWithLogic:gp1c=memory.gp1,ssbd=0,xjbd=0

#---5连波动---

[hiddenAction_5连波动取消]
requireConditional:if memory.gb1 > 0 and memory.gb2 <= 0 or memory.gb1 < 0 and memory.gb2 >= 0
setResourcesWithLogic:ssbd=0,xjbd=0
buildSpeed:0

[hiddenAction_上升波动]
requireConditional:if memory.gb1 > 0 
#and memory.gb2 >= 0
setResourcesWithLogic:xjbd=0
addResources:ssbd=1
buildSpeed:0

[hiddenAction_下降波动]
requireConditional:if memory.gb1 < 0 
#and memory.gb2 <= 0
addResources:xjbd=1
buildSpeed:0
setResourcesWithLogic:ssbd=0

#---检查项目---

#---波动检查---

[hiddenAction_连续波动检查]
requireConditional:if memory.jd1 >= 0.2 and memory.jd1 <= 0.3
showMessageToAllPlayers:本次波动特别,触发连续波动
alsoQueueAction:波动获取1
setUnitMemory:gb2=memory.gb1
buildSpeed:0

[hiddenAction_最低单价检查1]
requireConditional:if memory.gp1 <= ${gs1_pm}
showMessageToAllPlayers:${gs1}的股票已经下跌至最低单价${gs1_pm}
setUnitMemory:gp1=${gs1_pm}
buildSpeed:0

[hiddenAction_最高单价检查1]
requireConditional:if memory.gp1 >= ${gs1_pa}
showMessageToAllPlayers:${gs1}的股票已经上涨至最高单价${gs1_pa}
setUnitMemory:gp1=${gs1_pa}
buildSpeed:0

[hiddenAction_股价播报1涨]
requireConditional:if memory.gb1 > 0
showMessageToAllPlayers:${gs1}的股票本次上涨率%{memory.gb1*100}%,单价涨至%{memory.gp1}
buildSpeed:0

[hiddenAction_股价播报1跌]
requireConditional:if memory.gb1 < 0
showMessageToAllPlayers:${gs1}的股票本次下跌率%{memory.gb1*-100}%,单价跌至%{memory.gp1}
buildSpeed:0

[hiddenAction_股价播报1平]
requireConditional:if memory.gb1 == 0
#发送消息至玩家:${gs1}的股票本次价格不变
buildSpeed:0

#---金融危机---

[hiddenAction_金融危机检查]
requireConditional:if memory.wj1 >= 0.2 and memory.wj1 <= 0.25
showMessageToAllPlayers:金融危机爆发,股市濒临崩溃,单价变为最低:100
addResources:wjjs=300
buildSpeed:0

[hiddenAction_危机计时]
autoTrigger:if self.resource(type="wjjs") > 0
#addResources:wjjs:-5
addResources:wjjs:-0.25

[hiddenAction_危机效应]
autoTrigger:if self.resource(type="wjjs") > 0
setUnitMemory:gp1=100

#--熔断机制--

[hiddenAction_股票熔断机制]
requireConditional:if memory.gb1 <= 0 and memory.gb1 < -0.2
showMessageToAllPlayers:本次股票下跌严重,王某人决定启动熔断机制,持续时间5分钟
addResources:rdsj=300
buildSpeed:0

[hiddenAction_熔断计时]
autoTrigger:if self.resource(type="rdsj") > 0
#addResources:rdsj:-5
addResources:rdsj:-0.25

[graphics]
image:null.png
drawLayer: bottom
isVisibleToEnemies: false
icon_zoomed_out_neverShow:false

[attack]
canAttack:false
canAttackFlyingUnits:false
canAttackLandUnits:false
canAttackUnderwaterUnits:false

[movement]
movementType: NONE
moveSpeed: 0
maxTurnSpeed: 0
